class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* newnode=NULL;
        while(head!=NULL){
            ListNode* next=head->next;
            head->next=newnode;
            newnode=head;
            head=next;
        }
        return newnode;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* n1=reverseList(l1);
        ListNode* n2=reverseList(l2);
        ListNode* dummy=new ListNode();
        ListNode* temp=dummy;
        int carry =0;
        while(n1!=NULL || n2!=NULL || carry)
        {
            int sum=0;
            if(n1!=NULL)
            {
                sum=sum+(n1->val);
                n1=n1->next;
            }
            if(n2!=NULL)
            {
                sum=sum+(n2->val);
                n2=n2->next;
            }
            sum=sum+carry;
            carry=sum/10;
            ListNode* node=new ListNode(sum%10);
            temp->next=node;
            temp=temp->next;

        }
        return reverseList(dummy->next);
    }
};
